{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8090/api/auth';\n    this.tokenKey = 'authToken';\n    this.userKey = 'currentUser';\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      username,\n      password\n    }).pipe(tap(response => {\n      if (response.success) {\n        localStorage.setItem(this.tokenKey, response.token);\n        localStorage.setItem(this.userKey, JSON.stringify(response.user));\n      }\n    }));\n  }\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n    localStorage.removeItem(this.userKey);\n    return this.http.post(`${this.apiUrl}/logout`, {});\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem(this.tokenKey);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  getCurrentUser() {\n    const user = localStorage.getItem(this.userKey);\n    return user ? JSON.parse(user) : null;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["tap","AuthService","constructor","http","apiUrl","tokenKey","userKey","login","username","password","post","pipe","response","success","localStorage","setItem","token","JSON","stringify","user","logout","removeItem","isLoggedIn","getItem","getToken","getCurrentUser","parse","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\RajatJana\\Documents\\demo-app\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'http://localhost:8090/api/auth';\r\n  private tokenKey = 'authToken';\r\n  private userKey = 'currentUser';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/login`, { username, password })\r\n      .pipe(\r\n        tap((response: any) => {\r\n          if (response.success) {\r\n            localStorage.setItem(this.tokenKey, response.token);\r\n            localStorage.setItem(this.userKey, JSON.stringify(response.user));\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    localStorage.removeItem(this.tokenKey);\r\n    localStorage.removeItem(this.userKey);\r\n    return this.http.post(`${this.apiUrl}/logout`, {});\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  getCurrentUser(): any {\r\n    const user = localStorage.getItem(this.userKey);\r\n    return user ? JSON.parse(user) : null;\r\n  }\r\n}"],"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;;AAKtC,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,gCAAgC;IACzC,KAAAC,QAAQ,GAAG,WAAW;IACtB,KAAAC,OAAO,GAAG,aAAa;EAES;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,QAAQ,EAAE;MAAEI,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAClEE,IAAI,CACHX,GAAG,CAAEY,QAAa,IAAI;MACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;QACpBC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACV,QAAQ,EAAEO,QAAQ,CAACI,KAAK,CAAC;QACnDF,YAAY,CAACC,OAAO,CAAC,IAAI,CAACT,OAAO,EAAEW,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC;;IAErE,CAAC,CAAC,CACH;EACL;EAEAC,MAAMA,CAAA;IACJN,YAAY,CAACO,UAAU,CAAC,IAAI,CAAChB,QAAQ,CAAC;IACtCS,YAAY,CAACO,UAAU,CAAC,IAAI,CAACf,OAAO,CAAC;IACrC,OAAO,IAAI,CAACH,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,SAAS,EAAE,EAAE,CAAC;EACpD;EAEAkB,UAAUA,CAAA;IACR,OAAO,CAAC,CAACR,YAAY,CAACS,OAAO,CAAC,IAAI,CAAClB,QAAQ,CAAC;EAC9C;EAEAmB,QAAQA,CAAA;IACN,OAAOV,YAAY,CAACS,OAAO,CAAC,IAAI,CAAClB,QAAQ,CAAC;EAC5C;EAEAoB,cAAcA,CAAA;IACZ,MAAMN,IAAI,GAAGL,YAAY,CAACS,OAAO,CAAC,IAAI,CAACjB,OAAO,CAAC;IAC/C,OAAOa,IAAI,GAAGF,IAAI,CAACS,KAAK,CAACP,IAAI,CAAC,GAAG,IAAI;EACvC;;;uBApCWlB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX7B,WAAW;MAAA8B,OAAA,EAAX9B,WAAW,CAAA+B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}